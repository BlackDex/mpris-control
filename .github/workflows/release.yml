name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v2
      # End Checkout the repo

      # Install dependencies
      - name: Install dependencies Ubuntu
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends libdbus-1-dev
      # End Install dependencies

      # Enable Rust Caching
      - name: Enable Rust caching
        uses: Swatinem/rust-cache@v1
      # End Enable Rust Caching

      # Uses the rust-toolchain file to determine version
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy, rustfmt
      # End Uses the rust-toolchain file to determine version

      # Run cargo clippy, and fail on warnings (In release mode to speed up future builds)
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --release -- -D warnings
      # End Run cargo clippy

      # Run cargo fmt
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      # End Run cargo fmt

      # Build the binary
      - name: cargo build --release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      # End Build the binary

      # Upload artifact to Github Actions
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: mpris-control
          path: target/release/mpris-control
      # End Upload artifact to Github Actions

      # Add binary to release
      - name: Release binary
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ${{ github.event.head_commit.message }}
            (commit: ${{ github.sha }})
          files: |
            target/release/mpris-control
      # End Add binary to release
