name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v3
      # End Checkout the repo

      # Install dependencies
      - name: Install dependencies Ubuntu
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends libdbus-1-dev
      # End Install dependencies

      # Enable Rust Caching
      - name: Enable Rust caching
        uses: Swatinem/rust-cache@v2
      # End Enable Rust Caching

      # Install the correct rust toolchain
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt
      # End Uses the rust-toolchain file to determine version

      # Show environment
      - name: "Show environment"
        run: |
          rustc -vV
          cargo -vV
      # End Show environment

      # Run cargo clippy, and fail on warnings (In release mode to speed up future builds)
      - name: cargo clippy
        run: cargo clippy --release -- -D warnings
      # End Run cargo clippy

      # Run cargo fmt
      - name: cargo fmt
        run: cargo fmt --all -- --check
      # End Run cargo fmt

      # Build the binary
      - name: cargo build --release
        run: cargo build --release
      # End Build the binary

      # Upload artifact to Github Actions
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: mpris-control
          path: target/release/mpris-control
      # End Upload artifact to Github Actions

      # Release version
      - name: Release tagged version
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create ${GITHUB_REF#refs/*/} -t ${GITHUB_REF#refs/*/} target/release/mpris-control --generate-notes
